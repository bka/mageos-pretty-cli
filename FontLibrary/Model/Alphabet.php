<?php
declare(strict_types=1);

namespace FontLibrary\Model;

/** Initial Model file that the auto_loader did not want to load :x */

class Alphabet {
    public const ALPHABET = [
        "A" => " █████╗
                ██╔══██╗
                ███████║
                ██╔══██║
                ██║  ██║
                ╚═╝  ╚═╝",

        "B" => "
                ██████╗
                ██╔══██╗
                ██████╦╝
                ██╔══██╗
                ██████╦╝
                ╚═════╝",

        "C" => " █████╗
                ██╔══██╗
                ██║  ╚═╝
                ██║  ██╗
                ╚█████╔╝
                 ╚════╝",

        "D" => "██████╗
                ██╔══██╗
                ██║  ██║
                ██║  ██║
                ██████╔╝",

        "E" => "███████╗
                ██╔════╝
                ██████╗
                ██╔═══╝
                ███████╗",

        "F" => "███████╗
                ██╔════╝
                ██████╗
                ██╔═══╝
                ██║",

        "G" => " ██████╗
                ██╔════╝
                ██║  ███╗
                ██║   ██║
                 ██████╔╝",

        "H" => "██╗  ██╗
                ██║  ██║
                ███████║
                ██╔══██╗
                ██║  ██║",

        "I" => "██████╗
                  ██╔═
                  ██║
                  ██║
                ██████╔╝",


        "J" => "     ██╗
                     ██║
                     ██║
                ██╗  ██║
                ╚█████╔╝
                ╚════╝",

        "K" => "██╗  ██╗
                ██║ ██╔╝
                █████╔╝
                ██╔═██╗
                ██║  ██║",

        "L" => "██╗
                ██║
                ██║
                ██║
                ███████╗",

        "M" => "
                ███╗   ███╗
                ████╗ ████║
                ██╔████╔██║
                ██║╚██╔╝██║
                ██║ ╚═╝ ██║
                ╚═╝     ╚═╝",

        "N" => "███╗   ██╗
                ████╗  ██║
                ██╔██╗ ██║
                ██║╚██╗██║
                ██║ ╚████║",

        "O" => " ██████╗
                ██╔═══██╗
                ██║   ██║
                ██║   ██║
                 ██████╔╝",

        "P" => "██████╗
                ██╔══██╗
                ██████╔╝
                ██╔═══╝
                ██║",

        "Q" => " ██████╗
                ██╔═══██╗
                ██║   ██║
                ██║ ▄ ██║
                 ██████╔╝",

        "R" => "██████╗
                ██╔══██╗
                ██████╔╝
                ██╔██╗
                ██║ ██║",

        "S" => " ██████╗
                ██╔════╝
                 ███████╗
                 ╚════██║
                 ███████║",

        "T" => "████████╗
                   ██╔══
                   ██║
                   ██║
                   ██║",

        "U" => "██╗   ██╗
                ██║   ██║
                ██║   ██║
                ██║   ██║
                 ╚██████╔╝",

        "V" => "
                    ██╗   ██╗
                    ██║   ██║
                    ╚██╗ ██╔╝
                     ╚████╔╝
                      ╚██╔╝
                       ╚═╝",

        "W" => "
                 ██╗       ██╗
                 ██║  ██╗  ██║
                 ╚██╗████╗██╔╝
                  ████╔═████║
                  ╚██╔╝ ╚██╔╝
                   ╚═╝   ╚═╝",

        "X" => "
                ██╗  ██╗
                ╚██╗██╔╝
                 ╚███╔╝
                 ██╔██╗
                ██╔╝╚██╗
                ╚═╝  ╚═╝",

        "Y" => "
                ██╗   ██╗
                ╚██╗ ██╔╝
                 ╚████╔╝
                  ╚██╔╝
                   ██║
                   ╚═╝",

        "Z" => "
                ███████╗
                ╚════██║
                  ███╔═╝
                ██╔══╝
                ███████╗
                ╚══════╝",

        " " => " "
    ];

    public static function convertToSymbols(string $inputString): string
    {
        $upperCase = strtoupper($inputString);
        $inputStringArray = str_split($upperCase);

        $outputArray = '';
        foreach ($inputStringArray as $item) {
            $outputArray .= self::ALPHABET[$item];
        }

        return $outputArray;
    }

    public function addEffect(
        string $inputString,
        string $bgColor,
        string $fgColor,
        string $effect
    ): string
    {
        //return '<bg='.$bgColor.';fg='.$fgColor.';option='.$effect.'>'$inputString'</>';
        return '';
    }

    public function testFunction() {

    }
}
